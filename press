#!/bin/bash
# check for 2 args
if [ "$#" -lt 2 ]; then
    echo "Usage: press <INPUT_FILE> <FRAMES> [AUDIO_FILE]"
    exit 1
fi

# WIDTHxHEIGHT
size=$(identify "$1" | grep -oP "[0-9]+x[0-9]+ " | sed 's/ //g')
# WIDTH
iw=$(echo "$size" | cut -d'x' -f1)
# HEIGHT
ih=$(echo "$size" | cut -d'x' -f2)
# width modifier
wmod=$(echo "scale=0; $iw / $2" | bc)
# height modifier
hmod=$(echo "scale=0; $ih / $2" | bc)
# base name
base=$(basename "$1")
# input filename
filename="${base%.*}"
# input file extension
ext="${base##*.}" 

# trap SIGINT and cleanup in case someone kills
trap cleanup INT
function cleanup() {
    echo "cleaning up"
    rm -rf "$cache"
    exit 0
}

# create temporary directory
cache=$(mktemp -d)/

echo "converting frames to webm (this may take a while)"
counter=1
while [ $counter -le "$2" ]
do
    this_file="${cache}${base}"
    target_name="${cache}${filename}_${counter}"
    cp "$1" "$this_file"
    # calc current w/h modifiers
    v1=$(echo "scale=0; ${iw} + ${wmod} * ${counter}" | bc)
    v2=$(echo "scale=0; ${ih} - ${hmod} * ${counter}" | bc)
    # modify width/height
    ffmpeg -y -i "$this_file" -vf scale="${v1}:${v2}" "${target_name}.${ext}" -loglevel quiet
    # change to webm
    ffmpeg -y -i "${target_name}.${ext}" "${target_name}.webm" -loglevel quiet
    rm "$this_file" "${target_name}.${ext}"
    counter=$(($counter + 1))
done

echo "stitching the webm"
webm_list=$(ls "$cache" | grep -P "${filename}_[0-9]+.webm" | sort -t'_' -nk2)
fl=$(echo "$webm_list" | sed -E "s@${filename}@file \'${filename}@g" | sed -E "s/webm/webm\'\n/g")
echo "$fl" | sed -E "s/m' /m'\n/g" > "${cache}fl.txt"
ffmpeg -y -f concat -i "${cache}fl.txt" -c copy "${filename}.webm" -loglevel quiet
rm -rf "$cache"

if [ "$#" -eq 3 ]; then
    mv "${filename}.webm" "${filename}-old.webm"
    rp="$(realpath "$3")"
    ffmpeg -i "${filename}-old.webm" -i "$rp" -map 0:v -map 1:a -c:v copy -shortest "${filename}.webm" -loglevel quiet
    rm "${filename}-old.webm"
fi
